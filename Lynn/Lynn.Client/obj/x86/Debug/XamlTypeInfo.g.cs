//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Lynn.Client
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace Lynn.Client.Lynn_Client_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[49];
            _typeNameTable[0] = "Lynn.Client.Views.ChooseOneExerciseView";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[2] = "Lynn.Client.ViewModels.ChooseOneExerciseViewModel";
            _typeNameTable[3] = "Lynn.Client.ViewModels.ChoosingExerciseBaseViewModel";
            _typeNameTable[4] = "Lynn.Client.ViewModels.ExerciseBaseViewModel";
            _typeNameTable[5] = "Lynn.Client.Helpers.Observable";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "Lynn.Client.Views.DetailedCourseToEnrollInView";
            _typeNameTable[8] = "Windows.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[9] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[10] = "Lynn.Client.ViewModels.DetailedCourseToEnrollInViewModel";
            _typeNameTable[11] = "Lynn.Client.Views.DetailedCourseToStartView";
            _typeNameTable[12] = "Lynn.Client.ViewModels.DetailedCourseToStartViewModel";
            _typeNameTable[13] = "Lynn.Client.Views.DoExercisesPage";
            _typeNameTable[14] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[15] = "Lynn.Client.ViewModels.DoExercisesViewModel";
            _typeNameTable[16] = "Lynn.Client.ViewModels.EnrolledCoursesViewModel";
            _typeNameTable[17] = "System.Collections.ObjectModel.ObservableCollection`1<Lynn.Client.Models.CoursePresenter>";
            _typeNameTable[18] = "System.Collections.ObjectModel.Collection`1<Lynn.Client.Models.CoursePresenter>";
            _typeNameTable[19] = "Lynn.Client.Models.CoursePresenter";
            _typeNameTable[20] = "Int32";
            _typeNameTable[21] = "String";
            _typeNameTable[22] = "Lynn.DTO.Course";
            _typeNameTable[23] = "Lynn.Client.Views.EnrolledCourses";
            _typeNameTable[24] = "Lynn.Client.ViewModels.EnrollInCourseViewModel";
            _typeNameTable[25] = "System.Windows.Input.ICommand";
            _typeNameTable[26] = "Lynn.Client.Views.EnrollInCourse";
            _typeNameTable[27] = "Lynn.Client.Views.LearningPage";
            _typeNameTable[28] = "Lynn.Client.ViewModels.LearningViewModel";
            _typeNameTable[29] = "Lynn.Client.ViewModels.LoggedInViewModel";
            _typeNameTable[30] = "Lynn.DTO.User";
            _typeNameTable[31] = "Lynn.Client.Views.SettingsPage";
            _typeNameTable[32] = "Lynn.Client.ViewModels.SettingsViewModel";
            _typeNameTable[33] = "Lynn.Client.Views.LoggedInPage";
            _typeNameTable[34] = "Lynn.Client.ViewModels.MainViewModel";
            _typeNameTable[35] = "Lynn.Client.Views.MainPage";
            _typeNameTable[36] = "Lynn.Client.Views.PictureExerciseView";
            _typeNameTable[37] = "Lynn.Client.ViewModels.PictureExerciseViewModel";
            _typeNameTable[38] = "Lynn.Client.Helpers.EnumToBooleanConverter";
            _typeNameTable[39] = "System.Type";
            _typeNameTable[40] = "System.Reflection.MemberInfo";
            _typeNameTable[41] = "Lynn.Client.ViewModels.TestsViewModel";
            _typeNameTable[42] = "System.Collections.ObjectModel.ObservableCollection`1<Lynn.Client.Models.TestPresenter>";
            _typeNameTable[43] = "System.Collections.ObjectModel.Collection`1<Lynn.Client.Models.TestPresenter>";
            _typeNameTable[44] = "Lynn.Client.Models.TestPresenter";
            _typeNameTable[45] = "Lynn.DTO.Test";
            _typeNameTable[46] = "Lynn.Client.Views.TestsPage";
            _typeNameTable[47] = "Lynn.Client.Views.TranslationExerciseView";
            _typeNameTable[48] = "Lynn.Client.ViewModels.TranslationExerciseViewModel";

            _typeTable = new global::System.Type[49];
            _typeTable[0] = typeof(global::Lynn.Client.Views.ChooseOneExerciseView);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[2] = typeof(global::Lynn.Client.ViewModels.ChooseOneExerciseViewModel);
            _typeTable[3] = typeof(global::Lynn.Client.ViewModels.ChoosingExerciseBaseViewModel);
            _typeTable[4] = typeof(global::Lynn.Client.ViewModels.ExerciseBaseViewModel);
            _typeTable[5] = typeof(global::Lynn.Client.Helpers.Observable);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::Lynn.Client.Views.DetailedCourseToEnrollInView);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.Controls.ContentDialog);
            _typeTable[9] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[10] = typeof(global::Lynn.Client.ViewModels.DetailedCourseToEnrollInViewModel);
            _typeTable[11] = typeof(global::Lynn.Client.Views.DetailedCourseToStartView);
            _typeTable[12] = typeof(global::Lynn.Client.ViewModels.DetailedCourseToStartViewModel);
            _typeTable[13] = typeof(global::Lynn.Client.Views.DoExercisesPage);
            _typeTable[14] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[15] = typeof(global::Lynn.Client.ViewModels.DoExercisesViewModel);
            _typeTable[16] = typeof(global::Lynn.Client.ViewModels.EnrolledCoursesViewModel);
            _typeTable[17] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Lynn.Client.Models.CoursePresenter>);
            _typeTable[18] = typeof(global::System.Collections.ObjectModel.Collection<global::Lynn.Client.Models.CoursePresenter>);
            _typeTable[19] = typeof(global::Lynn.Client.Models.CoursePresenter);
            _typeTable[20] = typeof(global::System.Int32);
            _typeTable[21] = typeof(global::System.String);
            _typeTable[22] = typeof(global::Lynn.DTO.Course);
            _typeTable[23] = typeof(global::Lynn.Client.Views.EnrolledCourses);
            _typeTable[24] = typeof(global::Lynn.Client.ViewModels.EnrollInCourseViewModel);
            _typeTable[25] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[26] = typeof(global::Lynn.Client.Views.EnrollInCourse);
            _typeTable[27] = typeof(global::Lynn.Client.Views.LearningPage);
            _typeTable[28] = typeof(global::Lynn.Client.ViewModels.LearningViewModel);
            _typeTable[29] = typeof(global::Lynn.Client.ViewModels.LoggedInViewModel);
            _typeTable[30] = typeof(global::Lynn.DTO.User);
            _typeTable[31] = typeof(global::Lynn.Client.Views.SettingsPage);
            _typeTable[32] = typeof(global::Lynn.Client.ViewModels.SettingsViewModel);
            _typeTable[33] = typeof(global::Lynn.Client.Views.LoggedInPage);
            _typeTable[34] = typeof(global::Lynn.Client.ViewModels.MainViewModel);
            _typeTable[35] = typeof(global::Lynn.Client.Views.MainPage);
            _typeTable[36] = typeof(global::Lynn.Client.Views.PictureExerciseView);
            _typeTable[37] = typeof(global::Lynn.Client.ViewModels.PictureExerciseViewModel);
            _typeTable[38] = typeof(global::Lynn.Client.Helpers.EnumToBooleanConverter);
            _typeTable[39] = typeof(global::System.Type);
            _typeTable[40] = typeof(global::System.Reflection.MemberInfo);
            _typeTable[41] = typeof(global::Lynn.Client.ViewModels.TestsViewModel);
            _typeTable[42] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Lynn.Client.Models.TestPresenter>);
            _typeTable[43] = typeof(global::System.Collections.ObjectModel.Collection<global::Lynn.Client.Models.TestPresenter>);
            _typeTable[44] = typeof(global::Lynn.Client.Models.TestPresenter);
            _typeTable[45] = typeof(global::Lynn.DTO.Test);
            _typeTable[46] = typeof(global::Lynn.Client.Views.TestsPage);
            _typeTable[47] = typeof(global::Lynn.Client.Views.TranslationExerciseView);
            _typeTable[48] = typeof(global::Lynn.Client.ViewModels.TranslationExerciseViewModel);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_5_Observable() { return new global::Lynn.Client.Helpers.Observable(); }
        private object Activate_13_DoExercisesPage() { return new global::Lynn.Client.Views.DoExercisesPage(); }
        private object Activate_16_EnrolledCoursesViewModel() { return new global::Lynn.Client.ViewModels.EnrolledCoursesViewModel(); }
        private object Activate_17_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Lynn.Client.Models.CoursePresenter>(); }
        private object Activate_18_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Lynn.Client.Models.CoursePresenter>(); }
        private object Activate_22_Course() { return new global::Lynn.DTO.Course(); }
        private object Activate_23_EnrolledCourses() { return new global::Lynn.Client.Views.EnrolledCourses(); }
        private object Activate_24_EnrollInCourseViewModel() { return new global::Lynn.Client.ViewModels.EnrollInCourseViewModel(); }
        private object Activate_26_EnrollInCourse() { return new global::Lynn.Client.Views.EnrollInCourse(); }
        private object Activate_27_LearningPage() { return new global::Lynn.Client.Views.LearningPage(); }
        private object Activate_29_LoggedInViewModel() { return new global::Lynn.Client.ViewModels.LoggedInViewModel(); }
        private object Activate_30_User() { return new global::Lynn.DTO.User(); }
        private object Activate_31_SettingsPage() { return new global::Lynn.Client.Views.SettingsPage(); }
        private object Activate_32_SettingsViewModel() { return new global::Lynn.Client.ViewModels.SettingsViewModel(); }
        private object Activate_33_LoggedInPage() { return new global::Lynn.Client.Views.LoggedInPage(); }
        private object Activate_34_MainViewModel() { return new global::Lynn.Client.ViewModels.MainViewModel(); }
        private object Activate_35_MainPage() { return new global::Lynn.Client.Views.MainPage(); }
        private object Activate_38_EnumToBooleanConverter() { return new global::Lynn.Client.Helpers.EnumToBooleanConverter(); }
        private object Activate_41_TestsViewModel() { return new global::Lynn.Client.ViewModels.TestsViewModel(); }
        private object Activate_42_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Lynn.Client.Models.TestPresenter>(); }
        private object Activate_43_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Lynn.Client.Models.TestPresenter>(); }
        private object Activate_45_Test() { return new global::Lynn.DTO.Test(); }
        private object Activate_46_TestsPage() { return new global::Lynn.Client.Views.TestsPage(); }
        private void VectorAdd_17_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Lynn.Client.Models.CoursePresenter>)instance;
            var newItem = (global::Lynn.Client.Models.CoursePresenter)item;
            collection.Add(newItem);
        }
        private void VectorAdd_18_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Lynn.Client.Models.CoursePresenter>)instance;
            var newItem = (global::Lynn.Client.Models.CoursePresenter)item;
            collection.Add(newItem);
        }
        private void VectorAdd_42_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Lynn.Client.Models.TestPresenter>)instance;
            var newItem = (global::Lynn.Client.Models.TestPresenter)item;
            collection.Add(newItem);
        }
        private void VectorAdd_43_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Lynn.Client.Models.TestPresenter>)instance;
            var newItem = (global::Lynn.Client.Models.TestPresenter)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Lynn.Client.Views.ChooseOneExerciseView
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Lynn.Client.ViewModels.ChooseOneExerciseViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.ViewModels.ChoosingExerciseBaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  Lynn.Client.ViewModels.ChoosingExerciseBaseViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.ViewModels.ExerciseBaseViewModel"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Lynn.Client.ViewModels.ExerciseBaseViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  Lynn.Client.Helpers.Observable
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_Observable;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  Object
                xamlType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Lynn.Client.Views.DetailedCourseToEnrollInView
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  Windows.UI.Xaml.Controls.ContentDialog
                xamlType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Lynn.Client.ViewModels.DetailedCourseToEnrollInViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  Lynn.Client.Views.DetailedCourseToStartView
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  Lynn.Client.ViewModels.DetailedCourseToStartViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  Lynn.Client.Views.DoExercisesPage
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_13_DoExercisesPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Lynn.Client.ViewModels.DoExercisesViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  Lynn.Client.ViewModels.EnrolledCoursesViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.Activator = Activate_16_EnrolledCoursesViewModel;
                userType.AddMemberName("Courses");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  System.Collections.ObjectModel.ObservableCollection`1<Lynn.Client.Models.CoursePresenter>
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Lynn.Client.Models.CoursePresenter>"));
                userType.CollectionAdd = VectorAdd_17_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  System.Collections.ObjectModel.Collection`1<Lynn.Client.Models.CoursePresenter>
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_18_Collection;
                userType.CollectionAdd = VectorAdd_18_Collection;
                xamlType = userType;
                break;

            case 19:   //  Lynn.Client.Models.CoursePresenter
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("ID");
                userType.AddMemberName("CourseName");
                userType.AddMemberName("KnownLanguage");
                userType.AddMemberName("KnownLanguageTerritory");
                userType.AddMemberName("LearningLanguage");
                userType.AddMemberName("LearningLanguageTerritory");
                userType.AddMemberName("Level");
                userType.AddMemberName("Editor");
                userType.AddMemberName("Details");
                userType.AddMemberName("Flag");
                userType.AddMemberName("Course");
                userType.AddMemberName("KnownLanguageName");
                userType.AddMemberName("LearningLanguageName");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  Int32
                xamlType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  String
                xamlType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Lynn.DTO.Course
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  Lynn.Client.Views.EnrolledCourses
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_23_EnrolledCourses;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  Lynn.Client.ViewModels.EnrollInCourseViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.Activator = Activate_24_EnrollInCourseViewModel;
                userType.AddMemberName("SearchCourseByName_Click");
                userType.AddMemberName("Courses");
                userType.AddMemberName("CourseName");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  System.Windows.Input.ICommand
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 26:   //  Lynn.Client.Views.EnrollInCourse
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_EnrollInCourse;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  Lynn.Client.Views.LearningPage
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_LearningPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  Lynn.Client.ViewModels.LearningViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  Lynn.Client.ViewModels.LoggedInViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.Activator = Activate_29_LoggedInViewModel;
                userType.AddMemberName("LoggedInUser");
                userType.AddMemberName("CurrentPage");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  Lynn.DTO.User
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 31:   //  Lynn.Client.Views.SettingsPage
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_SettingsPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  Lynn.Client.ViewModels.SettingsViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  Lynn.Client.Views.LoggedInPage
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_LoggedInPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  Lynn.Client.ViewModels.MainViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.Activator = Activate_34_MainViewModel;
                userType.AddMemberName("LogIn_Click");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  Lynn.Client.Views.MainPage
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  Lynn.Client.Views.PictureExerciseView
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  Lynn.Client.ViewModels.PictureExerciseViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.ViewModels.ChoosingExerciseBaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  Lynn.Client.Helpers.EnumToBooleanConverter
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_38_EnumToBooleanConverter;
                userType.AddMemberName("EnumType");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  System.Type
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Reflection.MemberInfo"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  System.Reflection.MemberInfo
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 41:   //  Lynn.Client.ViewModels.TestsViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.Helpers.Observable"));
                userType.Activator = Activate_41_TestsViewModel;
                userType.AddMemberName("Course");
                userType.AddMemberName("LoggedInUser");
                userType.AddMemberName("Tests");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  System.Collections.ObjectModel.ObservableCollection`1<Lynn.Client.Models.TestPresenter>
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Lynn.Client.Models.TestPresenter>"));
                userType.CollectionAdd = VectorAdd_42_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 43:   //  System.Collections.ObjectModel.Collection`1<Lynn.Client.Models.TestPresenter>
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_43_Collection;
                userType.CollectionAdd = VectorAdd_43_Collection;
                xamlType = userType;
                break;

            case 44:   //  Lynn.Client.Models.TestPresenter
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("CategoryName");
                userType.AddMemberName("Level");
                userType.AddMemberName("Picture");
                userType.AddMemberName("Test");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  Lynn.DTO.Test
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  Lynn.Client.Views.TestsPage
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_46_TestsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  Lynn.Client.Views.TranslationExerciseView
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  Lynn.Client.ViewModels.TranslationExerciseViewModel
                userType = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Lynn.Client.ViewModels.ExerciseBaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_ChooseOneExerciseView_ViewModel(object instance)
        {
            var that = (global::Lynn.Client.Views.ChooseOneExerciseView)instance;
            return that.ViewModel;
        }
        private object get_1_DetailedCourseToEnrollInView_ViewModel(object instance)
        {
            var that = (global::Lynn.Client.Views.DetailedCourseToEnrollInView)instance;
            return that.ViewModel;
        }
        private object get_2_DetailedCourseToStartView_ViewModel(object instance)
        {
            var that = (global::Lynn.Client.Views.DetailedCourseToStartView)instance;
            return that.ViewModel;
        }
        private object get_3_DoExercisesPage_ViewModel(object instance)
        {
            var that = (global::Lynn.Client.Views.DoExercisesPage)instance;
            return that.ViewModel;
        }
        private object get_4_EnrolledCoursesViewModel_Courses(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.EnrolledCoursesViewModel)instance;
            return that.Courses;
        }
        private void set_4_EnrolledCoursesViewModel_Courses(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.EnrolledCoursesViewModel)instance;
            that.Courses = (global::System.Collections.ObjectModel.ObservableCollection<global::Lynn.Client.Models.CoursePresenter>)Value;
        }
        private object get_5_CoursePresenter_ID(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.ID;
        }
        private object get_6_CoursePresenter_CourseName(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.CourseName;
        }
        private object get_7_CoursePresenter_KnownLanguage(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.KnownLanguage;
        }
        private object get_8_CoursePresenter_KnownLanguageTerritory(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.KnownLanguageTerritory;
        }
        private object get_9_CoursePresenter_LearningLanguage(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.LearningLanguage;
        }
        private object get_10_CoursePresenter_LearningLanguageTerritory(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.LearningLanguageTerritory;
        }
        private object get_11_CoursePresenter_Level(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.Level;
        }
        private object get_12_CoursePresenter_Editor(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.Editor;
        }
        private object get_13_CoursePresenter_Details(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.Details;
        }
        private object get_14_CoursePresenter_Flag(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.Flag;
        }
        private object get_15_CoursePresenter_Course(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.Course;
        }
        private object get_16_CoursePresenter_KnownLanguageName(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.KnownLanguageName;
        }
        private object get_17_CoursePresenter_LearningLanguageName(object instance)
        {
            var that = (global::Lynn.Client.Models.CoursePresenter)instance;
            return that.LearningLanguageName;
        }
        private object get_18_EnrollInCourseViewModel_SearchCourseByName_Click(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.EnrollInCourseViewModel)instance;
            return that.SearchCourseByName_Click;
        }
        private void set_18_EnrollInCourseViewModel_SearchCourseByName_Click(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.EnrollInCourseViewModel)instance;
            that.SearchCourseByName_Click = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_19_EnrollInCourseViewModel_Courses(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.EnrollInCourseViewModel)instance;
            return that.Courses;
        }
        private void set_19_EnrollInCourseViewModel_Courses(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.EnrollInCourseViewModel)instance;
            that.Courses = (global::System.Collections.ObjectModel.ObservableCollection<global::Lynn.Client.Models.CoursePresenter>)Value;
        }
        private object get_20_EnrollInCourseViewModel_CourseName(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.EnrollInCourseViewModel)instance;
            return that.CourseName;
        }
        private void set_20_EnrollInCourseViewModel_CourseName(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.EnrollInCourseViewModel)instance;
            that.CourseName = (global::System.String)Value;
        }
        private object get_21_LearningPage_ViewModel(object instance)
        {
            var that = (global::Lynn.Client.Views.LearningPage)instance;
            return that.ViewModel;
        }
        private object get_22_LoggedInViewModel_LoggedInUser(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.LoggedInViewModel)instance;
            return that.LoggedInUser;
        }
        private void set_22_LoggedInViewModel_LoggedInUser(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.LoggedInViewModel)instance;
            that.LoggedInUser = (global::Lynn.DTO.User)Value;
        }
        private object get_23_LoggedInViewModel_CurrentPage(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.LoggedInViewModel)instance;
            return that.CurrentPage;
        }
        private void set_23_LoggedInViewModel_CurrentPage(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.LoggedInViewModel)instance;
            that.CurrentPage = (global::Windows.UI.Xaml.Controls.Page)Value;
        }
        private object get_24_SettingsPage_ViewModel(object instance)
        {
            var that = (global::Lynn.Client.Views.SettingsPage)instance;
            return that.ViewModel;
        }
        private object get_25_MainViewModel_LogIn_Click(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.MainViewModel)instance;
            return that.LogIn_Click;
        }
        private void set_25_MainViewModel_LogIn_Click(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.MainViewModel)instance;
            that.LogIn_Click = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_26_PictureExerciseView_ViewModel(object instance)
        {
            var that = (global::Lynn.Client.Views.PictureExerciseView)instance;
            return that.ViewModel;
        }
        private object get_27_EnumToBooleanConverter_EnumType(object instance)
        {
            var that = (global::Lynn.Client.Helpers.EnumToBooleanConverter)instance;
            return that.EnumType;
        }
        private void set_27_EnumToBooleanConverter_EnumType(object instance, object Value)
        {
            var that = (global::Lynn.Client.Helpers.EnumToBooleanConverter)instance;
            that.EnumType = (global::System.Type)Value;
        }
        private object get_28_TestsViewModel_Course(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.TestsViewModel)instance;
            return that.Course;
        }
        private void set_28_TestsViewModel_Course(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.TestsViewModel)instance;
            that.Course = (global::Lynn.DTO.Course)Value;
        }
        private object get_29_TestsViewModel_LoggedInUser(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.TestsViewModel)instance;
            return that.LoggedInUser;
        }
        private void set_29_TestsViewModel_LoggedInUser(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.TestsViewModel)instance;
            that.LoggedInUser = (global::Lynn.DTO.User)Value;
        }
        private object get_30_TestsViewModel_Tests(object instance)
        {
            var that = (global::Lynn.Client.ViewModels.TestsViewModel)instance;
            return that.Tests;
        }
        private void set_30_TestsViewModel_Tests(object instance, object Value)
        {
            var that = (global::Lynn.Client.ViewModels.TestsViewModel)instance;
            that.Tests = (global::System.Collections.ObjectModel.ObservableCollection<global::Lynn.Client.Models.TestPresenter>)Value;
        }
        private object get_31_TestPresenter_CategoryName(object instance)
        {
            var that = (global::Lynn.Client.Models.TestPresenter)instance;
            return that.CategoryName;
        }
        private object get_32_TestPresenter_Level(object instance)
        {
            var that = (global::Lynn.Client.Models.TestPresenter)instance;
            return that.Level;
        }
        private object get_33_TestPresenter_Picture(object instance)
        {
            var that = (global::Lynn.Client.Models.TestPresenter)instance;
            return that.Picture;
        }
        private object get_34_TestPresenter_Test(object instance)
        {
            var that = (global::Lynn.Client.Models.TestPresenter)instance;
            return that.Test;
        }
        private object get_35_TranslationExerciseView_ViewModel(object instance)
        {
            var that = (global::Lynn.Client.Views.TranslationExerciseView)instance;
            return that.ViewModel;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember xamlMember = null;
            global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Lynn.Client.Views.ChooseOneExerciseView.ViewModel":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Views.ChooseOneExerciseView");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "ViewModel", "Lynn.Client.ViewModels.ChooseOneExerciseViewModel");
                xamlMember.Getter = get_0_ChooseOneExerciseView_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Views.DetailedCourseToEnrollInView.ViewModel":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Views.DetailedCourseToEnrollInView");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "ViewModel", "Lynn.Client.ViewModels.DetailedCourseToEnrollInViewModel");
                xamlMember.Getter = get_1_DetailedCourseToEnrollInView_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Views.DetailedCourseToStartView.ViewModel":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Views.DetailedCourseToStartView");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "ViewModel", "Lynn.Client.ViewModels.DetailedCourseToStartViewModel");
                xamlMember.Getter = get_2_DetailedCourseToStartView_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Views.DoExercisesPage.ViewModel":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Views.DoExercisesPage");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "ViewModel", "Lynn.Client.ViewModels.DoExercisesViewModel");
                xamlMember.Getter = get_3_DoExercisesPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.ViewModels.EnrolledCoursesViewModel.Courses":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.EnrolledCoursesViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Courses", "System.Collections.ObjectModel.ObservableCollection`1<Lynn.Client.Models.CoursePresenter>");
                xamlMember.Getter = get_4_EnrolledCoursesViewModel_Courses;
                xamlMember.Setter = set_4_EnrolledCoursesViewModel_Courses;
                break;
            case "Lynn.Client.Models.CoursePresenter.ID":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "ID", "Int32");
                xamlMember.Getter = get_5_CoursePresenter_ID;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.CourseName":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "CourseName", "String");
                xamlMember.Getter = get_6_CoursePresenter_CourseName;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.KnownLanguage":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "KnownLanguage", "String");
                xamlMember.Getter = get_7_CoursePresenter_KnownLanguage;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.KnownLanguageTerritory":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "KnownLanguageTerritory", "String");
                xamlMember.Getter = get_8_CoursePresenter_KnownLanguageTerritory;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.LearningLanguage":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "LearningLanguage", "String");
                xamlMember.Getter = get_9_CoursePresenter_LearningLanguage;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.LearningLanguageTerritory":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "LearningLanguageTerritory", "String");
                xamlMember.Getter = get_10_CoursePresenter_LearningLanguageTerritory;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.Level":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Level", "String");
                xamlMember.Getter = get_11_CoursePresenter_Level;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.Editor":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Editor", "String");
                xamlMember.Getter = get_12_CoursePresenter_Editor;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.Details":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Details", "String");
                xamlMember.Getter = get_13_CoursePresenter_Details;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.Flag":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Flag", "String");
                xamlMember.Getter = get_14_CoursePresenter_Flag;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.Course":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Course", "Lynn.DTO.Course");
                xamlMember.Getter = get_15_CoursePresenter_Course;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.KnownLanguageName":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "KnownLanguageName", "String");
                xamlMember.Getter = get_16_CoursePresenter_KnownLanguageName;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.CoursePresenter.LearningLanguageName":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.CoursePresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "LearningLanguageName", "String");
                xamlMember.Getter = get_17_CoursePresenter_LearningLanguageName;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.ViewModels.EnrollInCourseViewModel.SearchCourseByName_Click":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.EnrollInCourseViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "SearchCourseByName_Click", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_18_EnrollInCourseViewModel_SearchCourseByName_Click;
                xamlMember.Setter = set_18_EnrollInCourseViewModel_SearchCourseByName_Click;
                break;
            case "Lynn.Client.ViewModels.EnrollInCourseViewModel.Courses":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.EnrollInCourseViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Courses", "System.Collections.ObjectModel.ObservableCollection`1<Lynn.Client.Models.CoursePresenter>");
                xamlMember.Getter = get_19_EnrollInCourseViewModel_Courses;
                xamlMember.Setter = set_19_EnrollInCourseViewModel_Courses;
                break;
            case "Lynn.Client.ViewModels.EnrollInCourseViewModel.CourseName":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.EnrollInCourseViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "CourseName", "String");
                xamlMember.Getter = get_20_EnrollInCourseViewModel_CourseName;
                xamlMember.Setter = set_20_EnrollInCourseViewModel_CourseName;
                break;
            case "Lynn.Client.Views.LearningPage.ViewModel":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Views.LearningPage");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "ViewModel", "Lynn.Client.ViewModels.LearningViewModel");
                xamlMember.Getter = get_21_LearningPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.ViewModels.LoggedInViewModel.LoggedInUser":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.LoggedInViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "LoggedInUser", "Lynn.DTO.User");
                xamlMember.Getter = get_22_LoggedInViewModel_LoggedInUser;
                xamlMember.Setter = set_22_LoggedInViewModel_LoggedInUser;
                break;
            case "Lynn.Client.ViewModels.LoggedInViewModel.CurrentPage":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.LoggedInViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "CurrentPage", "Windows.UI.Xaml.Controls.Page");
                xamlMember.Getter = get_23_LoggedInViewModel_CurrentPage;
                xamlMember.Setter = set_23_LoggedInViewModel_CurrentPage;
                break;
            case "Lynn.Client.Views.SettingsPage.ViewModel":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Views.SettingsPage");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "ViewModel", "Lynn.Client.ViewModels.SettingsViewModel");
                xamlMember.Getter = get_24_SettingsPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.ViewModels.MainViewModel.LogIn_Click":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.MainViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "LogIn_Click", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_25_MainViewModel_LogIn_Click;
                xamlMember.Setter = set_25_MainViewModel_LogIn_Click;
                break;
            case "Lynn.Client.Views.PictureExerciseView.ViewModel":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Views.PictureExerciseView");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "ViewModel", "Lynn.Client.ViewModels.PictureExerciseViewModel");
                xamlMember.Getter = get_26_PictureExerciseView_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Helpers.EnumToBooleanConverter.EnumType":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Helpers.EnumToBooleanConverter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "EnumType", "System.Type");
                xamlMember.Getter = get_27_EnumToBooleanConverter_EnumType;
                xamlMember.Setter = set_27_EnumToBooleanConverter_EnumType;
                break;
            case "Lynn.Client.ViewModels.TestsViewModel.Course":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.TestsViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Course", "Lynn.DTO.Course");
                xamlMember.Getter = get_28_TestsViewModel_Course;
                xamlMember.Setter = set_28_TestsViewModel_Course;
                break;
            case "Lynn.Client.ViewModels.TestsViewModel.LoggedInUser":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.TestsViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "LoggedInUser", "Lynn.DTO.User");
                xamlMember.Getter = get_29_TestsViewModel_LoggedInUser;
                xamlMember.Setter = set_29_TestsViewModel_LoggedInUser;
                break;
            case "Lynn.Client.ViewModels.TestsViewModel.Tests":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.ViewModels.TestsViewModel");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Tests", "System.Collections.ObjectModel.ObservableCollection`1<Lynn.Client.Models.TestPresenter>");
                xamlMember.Getter = get_30_TestsViewModel_Tests;
                xamlMember.Setter = set_30_TestsViewModel_Tests;
                break;
            case "Lynn.Client.Models.TestPresenter.CategoryName":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.TestPresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "CategoryName", "String");
                xamlMember.Getter = get_31_TestPresenter_CategoryName;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.TestPresenter.Level":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.TestPresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Level", "Int32");
                xamlMember.Getter = get_32_TestPresenter_Level;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.TestPresenter.Picture":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.TestPresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Picture", "String");
                xamlMember.Getter = get_33_TestPresenter_Picture;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Models.TestPresenter.Test":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Models.TestPresenter");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "Test", "Lynn.DTO.Test");
                xamlMember.Getter = get_34_TestPresenter_Test;
                xamlMember.SetIsReadOnly();
                break;
            case "Lynn.Client.Views.TranslationExerciseView.ViewModel":
                userType = (global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Lynn.Client.Views.TranslationExerciseView");
                xamlMember = new global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlMember(this, "ViewModel", "Lynn.Client.ViewModels.TranslationExerciseViewModel");
                xamlMember.Getter = get_35_TranslationExerciseView_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlSystemBaseType
    {
        global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Lynn.Client.Lynn_Client_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

